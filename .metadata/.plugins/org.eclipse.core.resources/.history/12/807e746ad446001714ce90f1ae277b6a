from Loggers.LogObserver import Observer
import os
import datetime as DT
import xml.etree.cElementTree as ET
from controllers.CLIUtils.enums import TestStatus
 
class XmlLogger(Observer):
 
    def startTest(self,dir_Path,log_Name,folder_Name=None):
        if(folder_Name==None):
            return      
        elif(folder_Name!=None):
            newpath = str(dir_Path)+ str(r'\\Logs\\SpecificFolderOfTests\\' + folder_Name)
        elif not os.path.exists(newpath):
            self.build_folder_xml(dir_Path,folder_Name)
        else:
            self.initialize_From_Existing_Xml()
        self.build_folder_xml(dir_Path,folder_Name)
 
    def startStep(self):
        print "startStep xml"
        
        
    def finishStep(self):
        print "finishStep xml"
        
        
    def finishTest(self):
        print "finish test xml"
        
    def build_folder_xml(self,dir_Path,folder_Name):
        root = ET.Element('ns0:test-suite')
        root.set("xmlns:ns0","urn:model.allure.qatools.yandex.ru")
        root.set("start",str(DT.datetime.now().strftime("%Y%m%d%H%M%S")))
        ET.SubElement(root,"name").text = folder_Name
        ET.SubElement(root,"labels")
        self.testCases = ET.SubElement(root,"test-cases")
        self.root = root
        
        self.set_end_time()
 
        print ET.tostring(self.root)
        # write to file:
        tree = ET.ElementTree(self.root)
        tree.write(dir_Path + "\\" +folder_Name +"-testsuite" ".xml")
        
    def set_end_time(self):
        self.root.set("stop",str(DT.datetime.now().strftime("%Y%m%d%H%M%S")))
        
    def initialize_From_Existing_Xml(self,dir_Path,folder_Name):
        tree = ET.parse(dir_Path + "\\" +folder_Name +"-testsuite" ".xml")
        self.root = tree.getroot()
        self.testCases = tree.find("test-cases")