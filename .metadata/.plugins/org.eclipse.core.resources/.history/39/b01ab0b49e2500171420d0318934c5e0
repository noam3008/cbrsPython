"""Asynchronous requests in Flask with gevent"""

from time import time

from flask import Flask, Response
from gevent.pywsgi import WSGIServer
from gevent import monkey
import requests
from werkzeug.utils import redirect
from flask.helpers import url_for
from flask.templating import render_template
from flask_api import response

# need to patch sockets to make requests async
monkey.patch_all()

app = Flask(__name__)  # pylint: disable=invalid-name
app.debug = True

import xml.etree.ElementTree as ET
tree = ET.parse("confOfResp.xml")
doc = tree.getroot()
import thread
from flask import Response,jsonify,json,request


@app.route('/first' ,methods = ['POST'])
def first_func(requests_counter=[0]):  # pylint: disable=dangerous-default-value
    """Asynchronous non-blocking streaming of relatively large (14.5MB) JPG
    of Seattle from wikimedia commons.
    """
    requests_counter[0] += 1
    request_num = requests_counter[0]
    url = 'http://stories4kid.com/313667_196.jpg'

    app.logger.debug('started %d', request_num)

    rsp = requests.get(url, stream=True)
    
    json = request.json
    assert json['fccId']=='321cba'
    print json
    return redirect(url_for('second_func',name=json['fccId']))


@app.route('/second/<name>')

def second_func(requests_counter=[0],name=None):  # pylint: disable=dangerous-default-value
    """Asynchronous non-blocking streaming of relatively large (14.5MB) JPG
    of Seattle from wikimedia commons.
    """
    print name
    requests_counter[0] += 1
    request_num = requests_counter[0]
    url = 'http://stories4kid.com/313667_196.jpg'

    app.logger.debug('started %d', request_num)

    rsp = requests.get(url, stream=True)
    
    data = {
        'hello'  : doc[0].text,
        'number' : doc[1].text,
        'name' : 'sas'
    }
    js = json.dumps(data)

    resp = jsonify(data)
    resp.headers['Link'] = 'http://luisrei.com'
    return redirect(url_for('third_func',name=data['hello']))

@app.route('/third')
@app.route('/third/<name>')
def third_func(requests_counter=[0],name=None):  # pylint: disable=dangerous-default-value
    """Asynchronous non-blocking streaming of relatively large (14.5MB) JPG
    of Seattle from wikimedia commons.
    """
    requests_counter[0] += 1
    request_num = requests_counter[0]
    url = 'http://stories4kid.com/313667_196.jpg'

    app.logger.debug('started %d', request_num)

    rsp = requests.get(url, stream=True)
    #return name
    return redirect(url_for('fourth_func'), code=307)

@app.route('/fourth' ,methods = ['POST'])
def fourth_func(requests_counter=[0]):  # pylint: disable=dangerous-default-value
    """Asynchronous non-blocking streaming of relatively large (14.5MB) JPG
    of Seattle from wikimedia commons.
    """
    print "fourth"
    return "noam"


@app.route('/fourthes', methods=['GET', 'POST'])
def index():
    errors = []
    results = {}
    if request.method == "POST":
        # get url that the user has entered
        try:
            url = request.form['url']
            r = requests.get(url)
            print(r.text)
        except:
            errors.append(
                "Unable to get URL. Please make sure it's valid and try again."
            )
    return request.form['url']
    
def main():
    "Start gevent WSGI server"
    # use gevent WSGI server instead of the Flask
    http = WSGIServer(('10.3.35.58', 5000), app.wsgi_app)
    # TODO gracefully handle shutdown
    http.serve_forever()


if __name__ == '__main__':
    main()