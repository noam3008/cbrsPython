from Loggers.LogObserver import Observer
from datetime import datetime
import logging
 
 
class cmdLogger(Observer):
    
    def __init__(self,log_Name,folder_Name=None):
        self.log_Name = log_Name
        self.folder_Name = folder_Name    
    
    
    def startTest(self):
        log_file =  '\Logs\CMDSessions\cmdSession_' + str(datetime.now().strftime("%Y_%m_%d_%H_%M_%S")) +'.log'
        self.addLoggerFile(consts.CLI_SESSION, log_file)
        if (folder_name!=None):
            self.create_new_dir_and_log(logger_name,folder_name)       
        if(logger_name!=consts.CLI_SESSION):  
            log_file =  '\Logs\LogsPerTest\_'+logger_name+"_" + str(datetime.now().strftime("%Y_%m_%d_%H_%M_%S")) +'.log'        
            self.addLoggerFile(logger_name, log_file)
    
    def startStep(self):
        print "startStep cmd"
        
        
    def finishStep(self):
        print "finishStep cmd"
        
        
    def finishTest(self):
        print "finish test cmd"
        
    def addLoggerFile(self, logger_name, log_file):
        log_setup = logging.getLogger(logger_name)
        formatter = logging.Formatter('%(levelname)s: %(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p')
        fileHandler = logging.FileHandler(str(self.dirPath) + log_file, mode='a')
        fileHandler.setFormatter(formatter)
        log_setup.addHandler(fileHandler)
        log_setup.setLevel(logging.INFO)
        self.currentLoggerName.append(log_setup.name)
 