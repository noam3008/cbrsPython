'''
Created on Apr 20, 2017

@author: iagmon
'''
import json
import pytest
import unittest
import logging
class Assertion(object):
    '''
    classdocs
    '''


    def __init__(self):
        '''
        Constructor
        '''
    def compareJsonReq(self,jsonReq,jsonName):
        logging.info("compare two jsons")
        jsonRequest = self.parseJsonToDic("C:/Users/iagmon/Desktop/jsonFromClient/",jsonReq)
        self.id_generator(jsonRequest)
        print jsonRequest
        jsonExpectedObj = self.parseJsonToDic("C:/Users/iagmon/Desktop/jsonFolder/",jsonName)
        
        self.assertEqual(jsonRequest, jsonExpectedObj)
        
        ################## the compare of the actual and expected request
                
    def assertEqual(self,actual,expected):
        logging.info("assert equal between two jsons")
        assert actual==expected
    
    def parseJsonToDic(self,filePathOfJsons,jsonFileName):
        filePath = filePathOfJsons
        myfile = open(filePath+str(jsonFileName))
        jsonAfterParse = json.load(myfile)
        return jsonAfterParse 
    
    def myprint(self,d):
        for k, v in d.items():
            if isinstance(v, dict):
                self.myprint(v)
                else:
                    print("{0} : {1}".format(k, v))
    

        
        
        
        
        