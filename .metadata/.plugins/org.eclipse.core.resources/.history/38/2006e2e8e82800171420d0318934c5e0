'''
Created on Apr 24, 2017

@author: iagmon
'''
from Step import Step
from controllers.TestDefinition import TestDefinition
import logging
from controllers.MController import Mcontroller
from controllers.ENodeBController import ENodeBController
class MyClass(object):
    '''
    classdocs
    '''


    def __init__(self, params):
        '''
        Constructor
        '''
        
logging.basicConfig(filename='example.log',level=logging.DEBUG)  
steps = []
########### user first step ########
steps.append(Step("bstep","spectrumInquery.json"))
steps.append(Step("bstep","grant.json"))
steps.append(Step("bstep","registeration.json"))
testDefinition = TestDefinition(steps)
mController = Mcontroller(testDefinition)

for Step in steps:
    mController.sentToEngineJsonByStep()
    enodeBController = ENodeBController(mController.engine)
    print enodeBController.sentRequestToEngine(Step.jsonOfStep)
    
def main():
    "Start gevent WSGI server"
    # use gevent WSGI server instead of the Flask
    http = WSGIServer(('10.3.35.58', 5000), app.wsgi_app)
    # TODO gracefully handle shutdown
    http.serve_forever()


if __name__ == '__main__':
    main()
