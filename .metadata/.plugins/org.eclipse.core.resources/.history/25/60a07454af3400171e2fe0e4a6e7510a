import logging
import sys
import os.path
from datetime import datetime
from fileinput import filename
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))
import model.Utils.Consts as consts
from xml.dom import minidom
from controllers.CLIHandler import CLIHandler
from controllers.ENodeBController import ENodeBController
from model import flaskServer
from pathlib import Path

def setup_logger(logger_name, log_file, level=logging.INFO):
    log_setup = logging.getLogger(logger_name)
    formatter = logging.Formatter('%(levelname)s: %(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p')
    fileHandler = logging.FileHandler(log_file, mode='a')
    fileHandler.setFormatter(formatter)
    log_setup.setLevel(level)
    log_setup.addHandler(fileHandler)
    log_setup.addHandler(streamHandler)
    

def logger(nameOfLogger,msg, level):
    log = logging.getLogger(nameOfLogger)
    if level == 'info'    : log.info(msg) 
    if level == 'warning' : log.warning(msg)
    if level == 'error'   : log.error(msg)
    return log

current_path = os.path.dirname(os.path.realpath(__file__))
dir_path = Path(__file__).parents[2]
setup_logger("firstLogger", str(dir_path) +'\logs\session_' + str(datetime.now().strftime("%Y_%m_%d_%H_%M_%S")) +'.log')

# first file logger
log = logger("firstLogger","noam","info")
inputAnswer=raw_input()  
# second file logger
setup_logger('second_logger', str(dir_path) +'\logs\session_' + str(datetime.now().strftime("%Y_%m_%d_%H_%M_%S")) +'.log')
logger("second_logger","noam2","info")

 
confFile= minidom.parse(current_path +"\conf.xml")
print (consts.SET_CSV_FILE_MESSAGE)  
logging.info(consts.START_TEST_MESSAGE)
inputAnswer=raw_input()  
if(inputAnswer!="quit"):
    logging.info("the selected test from the user is : " + inputAnswer)  
    cliHandler = CLIHandler(inputAnswer,confFile,dir_path) 
    flaskServer.enodeBController = ENodeBController(cliHandler.engine)
    flaskServer.runFlaskServer(confFile.getElementsByTagName("hostIp")[0].firstChild.data)
    if(cliHandler.engine.validationErrorAccuredInEngine):
        cliHandler.stop_Thread_Due_To_Exception()


    
''' exampleTest.csv'''
'''exampleTestWithRegistration.csv'''