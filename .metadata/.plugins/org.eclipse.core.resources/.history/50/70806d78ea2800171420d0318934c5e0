'''
Created on Apr 20, 2017

@author: iagmon
'''
from model.Utils2.Assert import Assertion 
import logging
from gevent.pywsgi import WSGIServer
from flask import Flask, Response
class MyEngine(object):
    
    app = Flask(__name__)  
    app.debug = True

    def __init__(self,jsonFileName=[None]):
        '''
        Will recieve the test structure (the list of the json file and the step defintions). 
        Will read all the json files and save it as some structure.
        '''
        self.jsonFileName = jsonFileName
        self.assertion= Assertion()
        
    def process_request(self,httpRequest):
        '''
        This will received the request that 
        arrived from the eNodeB,
         will assert the request according to the json file and in case the assert was successful,
          will return the response from the json file        '''
        self.assertion.compareJsonReq(httpRequest,self.jsonFileName)
        print("pass compare stage")
        return self.process_response(self.jsonFileName)
               
        
    
    def process_response(self, jsonFileName):
        '''
        This will received the request that 
        arrived from the eNodeB,
         will assert the request according to the json file and in case the assert was successful,
          will return the response from the json file
        '''
        jsonAfterParse = self.assertion.parseJsonToDic("C:/Users/iagmon/Desktop/jsonFolder/", self.jsonFileName,"response")
        return jsonAfterParse
    
    def setEngineJsonExpectedFileName(self,jsonExpected):
        self.jsonFileName = jsonExpected
        
    @app.route('/hello', methods = ['GET'])
    def api_hello(self,requests_counter=[0]):
        return "api"


    def main(self):
        "Start gevent WSGI server"
        # use gevent WSGI server instead of the Flask
        print("start flask server")
        http = WSGIServer(('10.3.35.58', 5000), self.app.wsgi_app)
        # TODO gracefully handle shutdown
        http.serve_forever()
    
    