from Loggers.LogObserver import Observer
from datetime import datetime
import logging
import os
from Loggers.XmlCreation import XmlCreation


class DebugLogger(Observer):
    def __init__(self):
        self.currentLoggerName = []
        self.dir_Path = None
        self.folder_Name = None

    def startTest(self,dir_Path,log_Name,folder_Name=None):
        self.dirPath = dir_Path
        self.folder_Name = folder_Name   
        log_file =  '\Logs\LogsPerTest\_'+log_Name+"_" + str(datetime.now().strftime("%Y_%m_%d_%H_%M_%S")) +'.log'        
        self.addLoggerFile(dir_Path,log_Name, log_file)
    
    def startStep(self):
        pass
           
    def finishStep(self):
        pass
        
    def finishTest(self):
        pass
    
    def addLoggerFile(self,dir_Path, logger_name, log_file):
        log_setup = logging.getLogger(logger_name)
        formatter = logging.Formatter('%(levelname)s: %(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p')
        fileHandler = logging.FileHandler(str(dir_Path) + log_file, mode='a')
        fileHandler.setFormatter(formatter)
        log_setup.addHandler(fileHandler)
        log_setup.setLevel(logging.INFO)
        self.currentLoggerName.append(log_setup.name)
        
    def create_new_dir_and_log(self,logger_name, folder_name):
        folderExists = True
        #### xml creation ###
        newpath = str(self.dirPath)+ str(r'\\Logs\\SpecificFolderOfTests\\' + folder_name)
        if not os.path.exists(newpath):
            os.makedirs(newpath)
            folderExists = False         
        testName = logger_name+"_" + str(datetime.now().strftime("%Y_%m_%d_%H_%M_%S"))
        log_file =  '\\Logs\\SpecificFolderOfTests\\'+folder_name+"\\_"+testName +'.log'  
        #self.addLoggerFile(logger_name+folder_name, log_file)
        self.xmlFile = XmlCreation(folder_name,testName,self.dirPath+'\\Logs\\SpecificFolderOfTests\\'+folder_name+'\\',folderExists)
        self.xmlFile.buildXml()