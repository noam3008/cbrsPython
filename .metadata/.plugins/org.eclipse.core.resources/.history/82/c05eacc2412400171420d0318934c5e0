from flask import Flask, url_for
app = Flask(__name__)

from flask import Flask
 
app = Flask(__name__)
 
@app.route('/helloesp')
def helloHandler():
    return 'Hello ESP8266, from Flask'

@app.route('/')
def api_root():
    return 'Welcome'

@app.route('/articles')
def api_articles():
    return 'List of ' + url_for('api_articles')

@app.route('/articles/<articleid>')
def api_article(articleid):
    return 'You are reading ' + articleid

from flask import request
@app.route('/echo', methods = ['GET', 'POST', 'PATCH', 'PUT', 'DELETE'])
def api_echo():
    if request.method == 'GET':
        return "ECHO: GET\n"

    elif request.method == 'POST':
        return "ECHO: POST\n"

    elif request.method == 'PATCH':
        return "ECHO: PACTH\n"

    elif request.method == 'PUT':
        return "ECHO: PUT\n"

    elif request.method == 'DELETE':
        return "ECHO: DELETE"
    
from flask import json

@app.route('/messages', methods = ['POST'])
def api_message():

    if request.headers['Content-Type'] == 'text/plain':
        return "Text Message: " + request.data

    elif request.headers['Content-Type'] == 'application/json':
        return "JSON Message: " + json.dumps(request.json)

    elif request.headers['Content-Type'] == 'application/octet-stream':
        f = open('./binary', 'wb')
        f.write(request.data)
        f.close()
        return "Binary message written!"

    else:
        return "415 Unsupported Media Type ;)"
    

    
from flask import Response,jsonify,json

@app.route('/hello', methods = ['GET'])
def api_hello():
    data = {
        
        'hello'  : 'world',
        'number' : 3,
        'name' : 'sas'
    }
    js = json.dumps(data)

    resp = jsonify(data)
    resp.headers['Link'] = 'http://luisrei.com'
    return resp
    
@app.route('/')
def index():
    # The args property from the request object is
    # a MultiDict with the parsed contents of the query string.
    # So we could get the keys/values, iterate throught them, etc
    # +INFO: http://werkzeug.pocoo.org/docs/datastructures/#werkzeug.datastructures.MultiDict
    params = request.args.items()
    return render_template('index.html', params=params)

if __name__ == '__main__':
    app.run(host="10.3.35.58")