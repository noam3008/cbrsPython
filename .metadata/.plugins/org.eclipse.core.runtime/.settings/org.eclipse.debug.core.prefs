//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.applicationLaunchType=org.eclipse.cdt.dsf.gdb.launch.localCLaunch,debug,;org.eclipse.cdt.cdi.launch.localCLaunch,run,;
//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.attachLaunchType=org.eclipse.cdt.dsf.gdb.launch.attachCLaunch,debug,;
//org.eclipse.debug.core.PREFERRED_DELEGATES/org.eclipse.cdt.launch.postmortemLaunchType=org.eclipse.cdt.dsf.gdb.launch.coreCLaunch,debug,;
eclipse.preferences.version=1
prefWatchExpressions=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?>\r\n<watchExpressions>\r\n<expression enabled\="true" text\="root"/>\r\n<expression enabled\="true" text\="xmlcreate"/>\r\n<expression enabled\="true" text\="american_observer"/>\r\n<expression enabled\="true" text\="newpath"/>\r\n<expression enabled\="true" text\="dir_Path"/>\r\n<expression enabled\="true" text\="folder_Name"/>\r\n<expression enabled\="true" text\="dir_Path + &quot;\\\\Logs\\\\SpecificFolderOfTests\\\\&quot; +folder_Name"/>\r\n<expression enabled\="true" text\="response"/>\r\n<expression enabled\="true" text\="testStatus"/>\r\n<expression enabled\="true" text\="self.log_Name"/>\r\n<expression enabled\="true" text\="self.testCase"/>\r\n<expression enabled\="true" text\="str(int(time.time()))"/>\r\n<expression enabled\="true" text\="str(int(calendar.timegm(time.gmtime()))"/>\r\n<expression enabled\="true" text\="str(int(calendar.timegm(time.gmtime())))"/>\r\n<expression enabled\="true" text\="str(int(calendar.timegm(time.gmtime(0))))"/>\r\n<expression enabled\="true" text\="str(time.mktime(DT.datetime.timetuple(DT.datetime.now())))"/>\r\n<expression enabled\="true" text\="str(int(time.mktime(DT.datetime.timetuple(DT.datetime.now()))))"/>\r\n<expression enabled\="true" text\="str(int(time.mktime(DT.datetime.timetuple(DT.datetime.now()))))"/>\r\n<expression enabled\="true" text\="str(int(time.mktime(DT.datetime.timetuple(DT.datetime.now()))))"/>\r\n<expression enabled\="true" text\="str(calendar.timegm(time.strptime(DT.datetime.now(), '%b %d, %Y @ %H\:%M\:%S UTC')))"/>\r\n<expression enabled\="true" text\="str(calendar.timegm()"/>\r\n<expression enabled\="true" text\="str(calendar.timegm())"/>\r\n<expression enabled\="true" text\="str(DT.datetime.now().strftime(&quot;%s&quot;))"/>\r\n<expression enabled\="true" text\="DT.datetime.now().strftime(&quot;%s&quot;)"/>\r\n<expression enabled\="true" text\="DT.datetime.now().strftime(&quot;%s&quot;)"/>\r\n<expression enabled\="true" text\="DT.datetime.utcfromtimestamp()"/>\r\n<expression enabled\="true" text\="DT.datetime.utcfromtimestamp(1416668401)"/>\r\n<expression enabled\="true" text\="DT.datetime.utcnow().timestamp()"/>\r\n<expression enabled\="true" text\="DT.datetime.utcnow()"/>\r\n<expression enabled\="true" text\="DT.datetime.strftime(DT.datetime.utcnow()"/>\r\n<expression enabled\="true" text\="DT.datetime.strftime(str(DT.datetime.utcnow())"/>\r\n<expression enabled\="true" text\="calendar.timegm(DT.datetime.utcnow().utctimetuple())"/>\r\n<expression enabled\="true" text\="calendar.timegm(DT.datetime.utcnow().utctimetuple())"/>\r\n<expression enabled\="true" text\="calendar.timegm(DT.datetime.now().utctimetuple()"/>\r\n<expression enabled\="true" text\="calendar.timegm(DT.datetime.now().utctimetuple())"/>\r\n<expression enabled\="true" text\="(i - epoch).total_seconds()"/>\r\n<expression enabled\="true" text\="DT.datetime.now()"/>\r\n<expression enabled\="true" text\="&quot;for the CBRS with the cbsd serial number \:&quot; + str(httpReq[&quot;cbsdId&quot;])[\:cbsdSerialNumberIndex+len(&quot;cbsd&quot;)+1\:]"/>\r\n<expression enabled\="true" text\="&quot;the CBRS with the serial number \:&quot; + str(httpReq[&quot;cbsdId&quot;])[\:cbsdSerialNumberIndex+len(&quot;cbsd&quot;)-5\:]"/>\r\n<expression enabled\="true" text\="&quot;the CBRS with the serial number \:&quot; + str(httpReq[&quot;cbsdId&quot;])[\:cbsdSerialNumberIndex+len(&quot;cbsd&quot;)-4\:]"/>\r\n<expression enabled\="true" text\="httpReq[&quot;cbsdId&quot;][cbsdSerialNumberIndex+len(&quot;cbsd&quot;)+1\:]"/>\r\n<expression enabled\="true" text\="&quot;the CBRS with the serial number \:&quot; + str(httpReq[&quot;cbsdId&quot;])[\:cbsdSerialNumberIndex+len(&quot;cbsd&quot;)-4\:] + E.message"/>\r\n</watchExpressions>\r\n
