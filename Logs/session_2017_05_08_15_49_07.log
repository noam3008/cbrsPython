05/08/2017 03:49:07 PM Start of the test
05/08/2017 03:49:08 PM the selected test from the user is : exampleTestWithRegistration.csv
05/08/2017 03:49:08 PM init the test definition by the test steps sent from the user
05/08/2017 03:49:08 PM  * Running on http://70.14.0.72:5000/ (Press CTRL+C to quit)
05/08/2017 03:49:11 PM sent flask request to engine
05/08/2017 03:49:11 PM request from eNodeB : OrderedDict([(u'registrationRequest', [OrderedDict([(u'userId', u'user123'), (u'fccId', u'1234567890123456789'), (u'cbsdSerialNumber', u'76B1E617472C'), (u'cbsdManufacturer', u'cbsdManufacturer123'), (u'cbsdCategory', u'a'), (u'callSign', u'callSign123'), (u'maximumGrants', 2), (u'sensingCapability', [u'receivedInterferencePower']), (u'airInterface', OrderedDict([(u'radioTechnology', u'lte'), (u'supportedSpec', u'lte-rel10')])), (u'installationParam', OrderedDict([(u'latitude', 38.878337), (u'longitude', -77.100703), (u'height', 1), (u'heightType', u'agl'), (u'horizontalAccuracy', 1), (u'verticalAccuracy', 1), (u'indoorDeployment', True), (u'antennaAzimuth', 0), (u'antennaDowntiltMech', 0), (u'antennaDowntiltElec', 0), (u'antennaGain', 0), (u'antennaBeamwidth', 0), (u'antennaModel', u'antennaModel123')]))])])])
05/08/2017 03:49:11 PM ENodeB sent request to engine from server
05/08/2017 03:49:11 PM compare between  requested json to expected json
05/08/2017 03:49:11 PM response in flask OrderedDict([(u'registrationResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)]))])])])
05/08/2017 03:49:11 PM 70.14.0.218 - - [08/May/2017 15:49:11] "POST /cbsd/registration/ HTTP/1.1" 200 -
05/08/2017 03:49:11 PM sent flask request to engine
05/08/2017 03:49:11 PM request from eNodeB : OrderedDict([(u'spectrumInquiryRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'palCredential', [u'type']), (u'inquiredSpectrum', [OrderedDict([(u'lowFrequency', 3550000000L), (u'highFrequency', 3600000000L)])])])])])
05/08/2017 03:49:11 PM ENodeB sent request to engine from server
05/08/2017 03:49:11 PM compare between  requested json to expected json
05/08/2017 03:49:11 PM response in flask OrderedDict([(u'spectrumInquiryResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'availableChannel', [OrderedDict([(u'frequencyRange', OrderedDict([(u'lowFrequency', 3550000000L), (u'highFrequency', 3600000000L)])), (u'channelType', u'PAL'), (u'ruleApplied', u'FCC Part 96')])])])])])
05/08/2017 03:49:11 PM 70.14.0.218 - - [08/May/2017 15:49:11] "POST /cbsd/spectrumInquiry/ HTTP/1.1" 200 -
05/08/2017 03:49:11 PM sent flask request to engine
05/08/2017 03:49:11 PM request from eNodeB : OrderedDict([(u'grantRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:49:11 PM ENodeB sent request to engine from server
05/08/2017 03:49:11 PM compare between  requested json to expected json
05/08/2017 03:49:11 PM response in flask OrderedDict([(u'grantResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'grantExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:49:11 PM 70.14.0.218 - - [08/May/2017 15:49:11] "POST /cbsd/grant/ HTTP/1.1" 200 -
05/08/2017 03:49:11 PM sent flask request to engine
05/08/2017 03:49:11 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Granted')])])])
05/08/2017 03:49:11 PM ENodeB sent request to engine from server
05/08/2017 03:49:11 PM compare between  requested json to expected json
05/08/2017 03:49:11 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:49:11 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:49:11 PM 70.14.0.218 - - [08/May/2017 15:49:11] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:50:11 PM sent flask request to engine
05/08/2017 03:50:11 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:50:11 PM ENodeB sent request to engine from server
05/08/2017 03:50:11 PM compare between  requested json to expected json
05/08/2017 03:50:11 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:50:11 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:50:11 PM 70.14.0.218 - - [08/May/2017 15:50:11] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:51:11 PM sent flask request to engine
05/08/2017 03:51:11 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:51:11 PM ENodeB sent request to engine from server
05/08/2017 03:51:11 PM compare between  requested json to expected json
05/08/2017 03:51:11 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:51:11 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:51:11 PM 70.14.0.218 - - [08/May/2017 15:51:11] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:52:12 PM sent flask request to engine
05/08/2017 03:52:12 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:52:12 PM ENodeB sent request to engine from server
05/08/2017 03:52:12 PM compare between  requested json to expected json
05/08/2017 03:52:12 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:52:12 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:52:12 PM 70.14.0.218 - - [08/May/2017 15:52:12] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:53:12 PM sent flask request to engine
05/08/2017 03:53:12 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:53:12 PM ENodeB sent request to engine from server
05/08/2017 03:53:12 PM compare between  requested json to expected json
05/08/2017 03:53:12 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:53:12 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:53:12 PM 70.14.0.218 - - [08/May/2017 15:53:12] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:54:12 PM sent flask request to engine
05/08/2017 03:54:12 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:54:12 PM ENodeB sent request to engine from server
05/08/2017 03:54:12 PM compare between  requested json to expected json
05/08/2017 03:54:12 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:54:12 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:54:12 PM 70.14.0.218 - - [08/May/2017 15:54:12] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:55:12 PM sent flask request to engine
05/08/2017 03:55:12 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:55:12 PM ENodeB sent request to engine from server
05/08/2017 03:55:12 PM compare between  requested json to expected json
05/08/2017 03:55:12 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:55:12 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:55:12 PM 70.14.0.218 - - [08/May/2017 15:55:12] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:56:12 PM sent flask request to engine
05/08/2017 03:56:12 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:56:12 PM ENodeB sent request to engine from server
05/08/2017 03:56:12 PM compare between  requested json to expected json
05/08/2017 03:56:12 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:56:12 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:56:12 PM 70.14.0.218 - - [08/May/2017 15:56:12] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:57:12 PM sent flask request to engine
05/08/2017 03:57:12 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:57:12 PM ENodeB sent request to engine from server
05/08/2017 03:57:12 PM compare between  requested json to expected json
05/08/2017 03:57:12 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:57:12 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:57:12 PM 70.14.0.218 - - [08/May/2017 15:57:12] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:58:13 PM sent flask request to engine
05/08/2017 03:58:13 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:58:13 PM ENodeB sent request to engine from server
05/08/2017 03:58:13 PM compare between  requested json to expected json
05/08/2017 03:58:13 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:58:13 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:58:13 PM 70.14.0.218 - - [08/May/2017 15:58:13] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:59:13 PM sent flask request to engine
05/08/2017 03:59:13 PM request from eNodeB : OrderedDict([(u'heartbeatRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450'), (u'grantRenew', False), (u'operationState', u'Transmission'), (u'sensingCapability', [u'type']), (u'operationParam', OrderedDict([(u'peakPower', 2986.9897000433602), (u'operationFrequencyRange', OrderedDict([(u'lowFrequency', 3560000000L), (u'highFrequency', 3580000000L)]))]))])])])
05/08/2017 03:59:13 PM ENodeB sent request to engine from server
05/08/2017 03:59:13 PM compare between  requested json to expected json
05/08/2017 03:59:13 PM return heart beat part of json from engine to the eNodeB
05/08/2017 03:59:13 PM response in flask OrderedDict([(u'heartbeatResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450'), (u'operationStatusReq', True), (u'transmitExpireTime', u'2017-05-28T23:20:08Z'), (u'heartbeatDuration', 60.0)])])])
05/08/2017 03:59:13 PM 70.14.0.218 - - [08/May/2017 15:59:13] "POST /cbsd/heartbeat/ HTTP/1.1" 200 -
05/08/2017 03:59:20 PM sent flask request to engine
05/08/2017 03:59:20 PM request from eNodeB : OrderedDict([(u'relinquishmentRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'grantId', u'8385094448610395450')])])])
05/08/2017 03:59:20 PM ENodeB sent request to engine from server
05/08/2017 03:59:20 PM compare between  requested json to expected json
05/08/2017 03:59:20 PM arrived to nstep starting question answer session with the technician
05/08/2017 03:59:20 PM response in flask OrderedDict([(u'relinquishmentResponse', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'error', OrderedDict([(u'errorCode', 0)])), (u'grantId', u'8385094448610395450')])])])
05/08/2017 03:59:20 PM 70.14.0.218 - - [08/May/2017 15:59:20] "POST /cbsd/relinquishment/ HTTP/1.1" 200 -
05/08/2017 03:59:21 PM hey the question is : Did csbd UUT stop transmission immidietly after relinquishment response please choose one of the answers :
05/08/2017 03:59:21 PM yes
05/08/2017 03:59:21 PM no
05/08/2017 03:59:38 PM hey the question is : Is cbsd UUT in idle state after relinquishment response please choose one of the answers :
05/08/2017 03:59:38 PM yes
05/08/2017 03:59:38 PM no
05/08/2017 03:59:41 PM the additional comments for the current test are : 
05/08/2017 03:59:44 PM selected answer from the user is : dsdws
05/08/2017 03:59:44 PM The final result of the test is : True
05/08/2017 03:59:44 PM the additional comments for the current test are : dsdws
05/08/2017 03:59:44 PM The final result of the test is : [True, 'dsdws']
05/08/2017 04:00:16 PM sent flask request to engine
05/08/2017 04:00:16 PM request from eNodeB : OrderedDict([(u'spectrumInquiryRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'palCredential', [u'type']), (u'inquiredSpectrum', [OrderedDict([(u'lowFrequency', 3550000000L), (u'highFrequency', 3600000000L)])])])])])
05/08/2017 04:00:16 PM 70.14.0.218 - - [08/May/2017 16:00:16] "POST /cbsd/spectrumInquiry/ HTTP/1.1" 302 -
05/08/2017 04:00:16 PM 70.14.0.218 - - [08/May/2017 16:00:16] "POST /shutdown?validationMessage=+all+the+steps+of+the+test+had+been+finished+see+final+results+at+the+console+and+no+other+test+had+been+selected HTTP/1.0" 200 -
05/08/2017 04:01:27 PM the selected test from the user is : exampleTest.csv
05/08/2017 04:01:27 PM init the test definition by the test steps sent from the user
05/08/2017 04:01:27 PM  * Running on http://70.14.0.72:5000/ (Press CTRL+C to quit)
05/08/2017 04:02:16 PM sent flask request to engine
05/08/2017 04:02:16 PM request from eNodeB : OrderedDict([(u'spectrumInquiryRequest', [OrderedDict([(u'cbsdId', u'1234567890123456789cbsdSerialNumber123'), (u'palCredential', [u'type']), (u'inquiredSpectrum', [OrderedDict([(u'lowFrequency', 3550000000L), (u'highFrequency', 3600000000L)])])])])])
05/08/2017 04:02:16 PM ENodeB sent request to engine from server
05/08/2017 04:02:16 PM response in flask An Error occurred while comparing between actual and expected request
05/08/2017 04:02:16 PM 70.14.0.218 - - [08/May/2017 16:02:16] "POST /cbsd/spectrumInquiry/ HTTP/1.1" 302 -
05/08/2017 04:02:16 PM 70.14.0.218 - - [08/May/2017 16:02:16] "POST /shutdown?validationMessage=An+Error+occurred+while+comparing+between+actual+and+expected+request HTTP/1.0" 400 -
05/08/2017 04:02:17 PM Session user will now close
05/08/2017 04:02:17 PM Session user will now close
05/08/2017 04:02:17 PM An Error occurred while comparing between actual and expected request
